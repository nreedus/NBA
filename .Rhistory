library(dplyr)
library(hflights)
data("hflights")
head(hflights)
flights <- tbl_df(hflights)
flights
library(dplyr)
library(hflights)
head(hflights)
flights <-tbl_df(hflights)
select(flights, ArrTime, Origin, DepTime)
flights %>% select(UniqueCarrier, DepDelay) %>% filter(DepDelay > 60)
flights %>% select(UniqueCarrier, DepDelay) %>% arrange(desc(DepDelay))
flights %>% select(Distance, AirTime) %>% mutate(Speed = Distance/AirTime*60)
flights %>% group_by(Dest) %>% summarise(avg_delay = mean(ArrDelay, na.rm=TRUE))
flights %>% group_by(UniqueCarrier) %>% summarise_each(funs(mean), Cancelled, Diverted)
flights %>% group_by(UniqueCarrier) %>% summarise_each(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), matches("Delay"))
flights %>% group_by(Month, DayofMonth) %>% summarise(flight_count = n()) %>% arrange(desc(flight_count))
flights %>% group_by(Month, DayofMonth) %>% tally(sort = TRUE)
flights %>% group_by(Dest) %>% summarise(flight_count = n(), plane_count = n_distinct(TailNum))
flights %>% group_by(Dest) %>% select(Cancelled) %>% table() %>% head()
load("~/R/Projects/Project 1 Basic Data Manipulation/.RData")
View(refine_original)
refine_original$company[refine_original$company=="Phillips"] <- "philips"
refine_original$company[refine_original$company=="phillips"] <- "philips"
refine_original$company[refine_original$company=="phllips"] <- "philips"
refine_original$company[refine_original$company=="akz0"] <- "akzo"
refine_original$company[refine_original$company=="ak zo"] <- "akzo"
refine_original$company[refine_original$company=="fillips"] <- "philips"
refine_original$company[refine_original$company=="phlips"] <- "philips"
refine_original$company[refine_original$company=="unilver"] <- "unilever"
refine_original %>% mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original %>% mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original %>% mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original (mutate("product_category" = ifelse(product_code == "p", "Smartphone", "")))
refine_original <- refine_original, mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original <- mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original "product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", ""))
library(dplyr)
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original, "product catagory" = ifelse(product_code == "v", "TV", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "x", "Laptop", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "q", "Tablet", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "x", "Laptop", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate(refine_original, "product_category" = ifelse(product_code == "x", "Laptop", "")) %>% mutate(refine_original, "product_category" = ifelse(product_code == "q", "Tablet", "")) %>% mutate(refine_original, "product catagory" = ifelse(product_code == "v", "TV", "")) %>% mutate(refine_original, "product catagory" = ifelse(product_code == "v", "TV", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product catagory" = ifelse(product_code == "v", "TV", product_category)) %>% mutate("product catagory" = ifelse(product_code == "v", "TV", product_category))
refine_original <-mutate(refine_original, company_philips = ifelse(company =="philips", 1, 0)) %>%
mutate(company_akzo = ifelse(company == "akzo", 1, 0)) %>%
mutate(company_van_houten = ifelse(company == "van_houten", 1, 0)) %>%
mutate(company_unilever = ifelse(company == "unilever", 1, 0))
refine_original <- mutate(refine_original, product_smartphone = ifelse(product_category == "Smartphone", 1, 0)) %>%
mutate(product_TV = ifelse(product_category == "TV", 1, 0)) %>%
mutate(product_laptop = ifelse(product_category == "Laptop", 1, 0)) %>%
mutate(product_tablet = ifelse(product_category == "Tablet", 1, 0))
refine_original$`product catagory` <-NULL
refine_original$`product category` <-NULL
refine_original$`product_category` <-NULL
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category))
refine_original$`product catagory` <-NULL
refine_original$`product_category` <-NULL
refine_original$`product category` <-NULL
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category))
refine_original$`product_category` <-NULL
colnames(refine_original)
colnames(refine_original) [-1]
colnames(refine_original)[-1]
colnames(refine_original)[-12]
colnames(refine_original)[12]
colnames(refine_original)[14]
colnames(refine_original)[14] <-"product_category"
write.csv(refine_original, "refine_clean.csv")
getwd
getwd()
write.csv(refine_original, file="refine_clean.csv")
getwd()
library(dplyr)
library(hflights)
flights <- tbl_df(hflights)
head
head(flights)
x <- rnorm(100, mean=.5, sd=.3)
hist(x, axes = FALSE, ylab="")
axis(4)
axis(1)
run set.seed(1234)
set.seed(1234)
x <- rnorm(100, mean=.5, sd=.3)
mean(x)
sd(x)
set.seed(1)
x <- rnorm(100)
head(x)
internal(tail)
help(tail)
?"tail"
x <- 5 : 6
x
x <- 5 + 6
y <- x + 3
z <- y - 10
z
?ls
?lm
?list
?lst
?ls
?list
?lst
?ls
?lm
?list
A <- c(1,3,5,7,9)
A
B <- mean(A)
B
x<- c(2,4,6,8,10)
Z <- (A+X)
X<- c(2,4,6,8,10)
Z <- (A+X)
X<- c(2,4,6,8,10)
Z <- (A+X)
Z
paste(”R session”, 1)
paste(R session, 1)
?paste
paste c("R session", 1)
paste("R session", 1)
head(R session 1)
head("R session" 1)
head("R session", 1)
dim("R session", 1)
read("R session", 1)
ls("R session", 1)
summary("R session", 1)
my.standard<-function(x){(x-mean(x))/sd(x)}
my.standard()
my.standard
my.standard(1)
y <- c(1, 2, 3.14, 4, 5)
y
z <- c(FALSE, TRUE, 2, 3, 4)
z
matrix(c(5,4,3,2,1,0)+2,nrow=2)<5
?pi
a <- 3
b <- 4
myfunc <- function(x,y){
a <- x+y
b <- x-y
return(a*b)
}
return(a*b)
?parameter
??parameter
a <- 7
b <- 5
x=3
y=4
myfunc <- function(x,y){
a <- x+y
b <- x-y
return(a*b)
}
return(a*b)
myfunc
7*-1
library(dplyr)
library(magrittr)
library(ggplot2)
NBA_train <- read.csv("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA/NBA_train.csv")
NBA_train <- read.csv("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA/NBA_train.csv")
NBA_train2 <- read.csv("NBA/NBA_train.csv")
setwd("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA")
NBA_train2 <- read.csv("NBA/NBA_train.csv")
NBA <-NBA_train
str(NBA)
tmp<- group_by(NBA, W) %>% summarise(nTot = n(), nPO = sum(Playoffs), fracPO = nPO/nTot)
plot(tmp$W, tmp$fracPO, pch = 21, col = "red2", bg = "orange",
xlab = "Wins", ylab = "Making the Playoffs", main = "Playoff Appearance / Regular Season Wins")
abline(h = 0.9, lty = 3, col = "red2")
abline(v = 35, lty = 3, col = "blue2")
abline(v = 45, lty = 3, col = "blue2")
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
plot(NBA$PTSdiff, NBA$W, pch = 21, col = "red2", bg = "orange",
xlab = "PTS Difference", ylab = "Wins", main = "Wins / Points Scored")
Wins_Reg <- lm(W ~ PTSdiff, data = NBA)
summary(Wins_Reg)
PointsRS <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data = NBA)
summary(PointsRS)
SSE <- sum(PointsRS$residuals^2)
print(SSE)
RMSE <- sqrt(SSE/PointsRS$df.residual)
RMSE
mean(NBA$PTS)
par(mar=c(5, 4, 4, 1)+0.1)
par(oma=c(0, 0, 0, 0))
pairs(NBA[, c("X2PA", "X3PA", "FTA", "AST", "ORB", "DRB", "TOV", "STL", "BLK")], gap=0.5, las=1,
pch=21, bg=rgb(0,0,1,0.25),
panel=mypanel, lower.panel=function(...) panel.cor(..., color.bg=TRUE), main="")
mtext(side=3, "pairs plot with correlation values", outer=TRUE, line=-1.2, font=2)
mtext(side=3, "Dashed lines are 'lm(y~x)' fits.\nCorrelation and scatterplot frames are color-coded on the str
length of the correlation",
outer=TRUE, line=-1.6, padj=1, cex=0.8, font=1)
PointsRS2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL + BLK, data = NBA)
summary(PointsRS2)
PointsRS3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data = NBA)
summary(PointsRS3)
PointsRS4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data = NBA)
summary(PointsRS4)
SSE_4 <-sum(PointsRS4$residuals^2)
RSME_4 <- sqrt(SSE_4/nrow(NBA))
NBA_test <- read.csv("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA/NBA_test.csv")
PointsPredictions <- predict(PointsRS4, newdata = NBA_test)
summary(PointsPredictions)
SSE <- sum((PointsPredictions - NBA_test$PTS)^2)
SSE
SST <- sum((mean(NBA$PTS) - NBA_test$PTS)^2)
R2 <- 1 - SSE/SST
R2
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
knitr::opts_chunk$set(echo = TRUE)
tmp<- group_by(NBA, W) %>% summarise(nTot = n(), nPO = sum(Playoffs), fracPO = nPO/nTot)
View(tmp)
plot(tmp$W, tmp$fracPO, pch = 21, col = "red2", bg = "orange",
xlab = "Wins", ylab = "Making the Playoffs", main = "Playoff Appearance / Regular Season Wins")
abline(h = 0.9, lty = 3, col = "red2")
abline(v = 35, lty = 3, col = "blue2")
abline(v = 45, lty = 3, col = "blue2")
Plot y=tmp$W, x=tmp$fracPO
plot(NBA$PTSdiff, NBA$W, pch = 21, col = "red2", bg = "orange",
xlab = "PTS Difference", ylab = "Wins", main = "Wins / Points Scored")
PointsRS <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data = NBA)
summary(PointsRS)
SSE <- sum(PointsRS$residuals^2)
print(SSE)
RMSE <- sqrt(SSE/PointsRS$df.residual)
RMSE
RMSE <- sqrt(SSE/PointsRS$df.residual)
RMSE
mean(NBA$PTS)
mean(NBA$PTS)
mean(NBA$PTS)
RMSE <- sqrt(SSE/PointsRS$df.residual)
RMSE
SSE <- sum(PointsRS$residuals^2)
print(SSE)
RMSE <- sqrt(SSE/PointsRS$df.residual)
RMSE
PointsRS <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data = NBA)
summary(PointsRS)
tmp<- group_by(NBA, W) %>% summarise(nTot = n(), nPO = sum(Playoffs), fracPO = nPO/nTot)
View(tmp)
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
NBA$PTSdiff <- NBA$PTS - NBA$oppPTS
PointsRS2 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL + BLK, data = NBA)
summary(PointsRS2)
PointsRS3 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data = NBA)
summary(PointsRS3)
PointsRS4 <- lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data = NBA)
summary(PointsRS4)
SSE_4 <-sum(PointsRS4$residuals^2)
RSME_4 <- sqrt(SSE_4/nrow(NBA))
SSE_4 <-sum(PointsRS4$residuals^2)
RSME_4 <- sqrt(SSE_4/nrow(NBA))
SSE_4
RSME_4
NBA_test <- read.csv("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA/NBA_test.csv")
PointsPredictions <- predict(PointsRS4, newdata = NBA_test)
summary(PointsPredictions)
SSE <- sum((PointsPredictions - NBA_test$PTS)^2)
SSE
SST <- sum((mean(NBA$PTS) - NBA_test$PTS)^2)
SSE <- sum((PointsPredictions - NBA_test$PTS)^2)
SSE
SST <- sum((mean(NBA$PTS) - NBA_test$PTS)^2)
SST
R2 <- 1 - SSE/SST
R2
RMSE <- sqrt(SSE/nrow(NBA_test))
RMSE
save.image("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA/NBA.Rproj.RData")
